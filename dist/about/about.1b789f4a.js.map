{"mappings":"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","sources":["node_modules/typeit/dist/index.es.js","about/typeIt.js"],"sourcesContent":["// TypeIt by Alex MacArthur - https://typeitjs.com\nconst isArray = (thing) => Array.isArray(thing);\nconst asArray = (value) => {\n  return isArray(value) ? value : [value];\n};\nlet Queue = function(initialItems) {\n  let add = function(steps) {\n    asArray(steps).forEach((step) => {\n      return _q.set(Symbol(step.char?.innerText), buildQueueItem({ ...step }));\n    });\n    return this;\n  };\n  let getTypeable = () => rawValues().filter((value) => value.typeable);\n  let set = function(index, item) {\n    let keys = [..._q.keys()];\n    _q.set(keys[index], buildQueueItem(item));\n  };\n  let buildQueueItem = (queueItem) => {\n    queueItem.shouldPauseCursor = function() {\n      return Boolean(this.typeable || this.cursorable || this.deletable);\n    };\n    return queueItem;\n  };\n  let reset = function() {\n    _q.forEach((item) => delete item.done);\n  };\n  let wipe = function() {\n    _q = /* @__PURE__ */ new Map();\n    add(initialItems);\n  };\n  let getQueue = () => _q;\n  let rawValues = () => Array.from(_q.values());\n  let destroy = (key) => _q.delete(key);\n  let getItems = (all = false) => all ? rawValues() : rawValues().filter((i) => !i.done);\n  let done = (key, shouldDestroy = false) => shouldDestroy ? _q.delete(key) : _q.get(key).done = true;\n  let _q = /* @__PURE__ */ new Map();\n  add(initialItems);\n  return {\n    add,\n    set,\n    wipe,\n    reset,\n    destroy,\n    done,\n    getItems,\n    getQueue,\n    getTypeable\n  };\n};\nconst toArray = (val) => Array.from(val);\nconst createTextNode = (content) => document.createTextNode(content);\nlet expandTextNodes = (element) => {\n  [...element.childNodes].forEach((child) => {\n    if (child.nodeValue) {\n      [...child.nodeValue].forEach((c) => {\n        child.parentNode.insertBefore(createTextNode(c), child);\n      });\n      child.remove();\n      return;\n    }\n    expandTextNodes(child);\n  });\n  return element;\n};\nconst getParsedBody = (content) => {\n  let doc = document.implementation.createHTMLDocument();\n  doc.body.innerHTML = content;\n  return expandTextNodes(doc.body);\n};\nconst DATA_ATTRIBUTE = \"data-typeit-id\";\nconst CURSOR_CLASS = \"ti-cursor\";\nconst END = \"END\";\nconst DEFAULT_STATUSES = {\n  started: false,\n  completed: false,\n  frozen: false,\n  destroyed: false\n};\nconst DEFAULT_OPTIONS = {\n  breakLines: true,\n  cursor: {\n    autoPause: true,\n    autoPauseDelay: 500,\n    animation: {\n      frames: [0, 0, 1].map((n) => {\n        return { opacity: n };\n      }),\n      options: {\n        iterations: Infinity,\n        easing: \"steps(2, start)\",\n        fill: \"forwards\"\n      }\n    }\n  },\n  cursorChar: \"|\",\n  cursorSpeed: 1e3,\n  deleteSpeed: null,\n  html: true,\n  lifeLike: true,\n  loop: false,\n  loopDelay: 750,\n  nextStringDelay: 750,\n  speed: 100,\n  startDelay: 250,\n  startDelete: false,\n  strings: [],\n  waitUntilVisible: false,\n  beforeString: () => {\n  },\n  afterString: () => {\n  },\n  beforeStep: () => {\n  },\n  afterStep: () => {\n  },\n  afterComplete: () => {\n  }\n};\nconst PLACEHOLDER_CSS = `[${DATA_ATTRIBUTE}]:before {content: '.'; display: inline-block; width: 0; visibility: hidden;}`;\nfunction walkElementNodes(element, shouldReverse = false, shouldIncludeCursor = false) {\n  let cursor = element.querySelector(`.${CURSOR_CLASS}`);\n  let walker = document.createTreeWalker(element, NodeFilter.SHOW_ALL, {\n    acceptNode: (node) => {\n      if (cursor && shouldIncludeCursor) {\n        if (node.classList?.contains(CURSOR_CLASS)) {\n          return NodeFilter.FILTER_ACCEPT;\n        }\n        if (cursor.contains(node)) {\n          return NodeFilter.FILTER_REJECT;\n        }\n      }\n      return node.classList?.contains(CURSOR_CLASS) ? NodeFilter.FILTER_REJECT : NodeFilter.FILTER_ACCEPT;\n    }\n  });\n  let nextNode;\n  let nodes = [];\n  while (nextNode = walker.nextNode()) {\n    if (!nextNode.originalParent) {\n      nextNode.originalParent = nextNode.parentNode;\n    }\n    nodes.push(nextNode);\n  }\n  return shouldReverse ? nodes.reverse() : nodes;\n}\nfunction chunkStringAsHtml(string) {\n  return walkElementNodes(getParsedBody(string));\n}\nfunction maybeChunkStringAsHtml(str, asHtml = true) {\n  return asHtml ? chunkStringAsHtml(str) : toArray(str).map(createTextNode);\n}\nconst createElement = (el) => document.createElement(el);\nconst appendStyleBlock = (styles, id = \"\") => {\n  let styleBlock = createElement(\"style\");\n  styleBlock.id = id;\n  styleBlock.appendChild(createTextNode(styles));\n  document.head.appendChild(styleBlock);\n};\nconst calculateDelay = (delayArg) => {\n  if (!isArray(delayArg)) {\n    delayArg = [delayArg / 2, delayArg / 2];\n  }\n  return delayArg;\n};\nconst randomInRange = (value, range2) => {\n  return Math.abs(\n    Math.random() * (value + range2 - (value - range2)) + (value - range2)\n  );\n};\nlet range = (val) => val / 2;\nfunction calculatePace(options) {\n  let { speed, deleteSpeed, lifeLike } = options;\n  deleteSpeed = deleteSpeed !== null ? deleteSpeed : speed / 3;\n  return lifeLike ? [\n    randomInRange(speed, range(speed)),\n    randomInRange(deleteSpeed, range(deleteSpeed))\n  ] : [speed, deleteSpeed];\n}\nconst destroyTimeouts = (timeouts) => {\n  timeouts.forEach(clearTimeout);\n  return [];\n};\nconst generateHash = () => Math.random().toString().substring(2, 9);\nconst isInput = (el) => \"value\" in el;\nlet getAllChars = (element) => {\n  if (isInput(element)) {\n    return toArray(element.value);\n  }\n  return walkElementNodes(element, true).filter(\n    (c) => !(c.childNodes.length > 0)\n  );\n};\nconst fireWhenVisible = (element, func) => {\n  let observer = new IntersectionObserver(\n    (entries, observer2) => {\n      entries.forEach((entry) => {\n        if (entry.isIntersecting) {\n          func();\n          observer2.unobserve(element);\n        }\n      });\n    },\n    { threshold: 1 }\n  );\n  observer.observe(element);\n};\nlet handleFunctionalArg = (arg) => {\n  return typeof arg === \"function\" ? arg() : arg;\n};\nconst isNumber = (value) => Number.isInteger(value);\nlet select = (selector, element = document, all = false) => {\n  return element[`querySelector${all ? \"All\" : \"\"}`](selector);\n};\nlet isBodyElement = (node) => /body/i.test(node?.tagName);\nlet insertIntoElement = (originalTarget, character) => {\n  if (isInput(originalTarget)) {\n    originalTarget.value = `${originalTarget.value}${character.textContent}`;\n    return;\n  }\n  character.innerHTML = \"\";\n  let target = isBodyElement(character.originalParent) ? originalTarget : character.originalParent || originalTarget;\n  target.insertBefore(\n    character,\n    select(\".\" + CURSOR_CLASS, target) || null\n  );\n};\nlet updateCursorPosition = (steps, cursorPosition, printedCharacters) => {\n  return Math.min(\n    Math.max(cursorPosition + steps, 0),\n    printedCharacters.length\n  );\n};\nconst merge = (originalObj, newObj) => Object.assign({}, originalObj, newObj);\nconst removeNode = (node, rootElement) => {\n  if (!node)\n    return;\n  let nodeParent = node.parentNode;\n  let nodeToRemove = nodeParent.childNodes.length > 1 || nodeParent.isSameNode(rootElement) ? node : nodeParent;\n  nodeToRemove.remove();\n};\nconst repositionCursor = (element, allChars, newCursorPosition) => {\n  let nodeToInsertBefore = allChars[newCursorPosition - 1];\n  let cursor = select(`.${CURSOR_CLASS}`, element);\n  element = nodeToInsertBefore?.parentNode || element;\n  element.insertBefore(cursor, nodeToInsertBefore || null);\n};\nfunction selectorToElement(thing) {\n  return typeof thing === \"string\" ? select(thing) : thing;\n}\nconst isNonVoidElement = (el) => /<(.+)>(.*?)<\\/(.+)>/.test(el.outerHTML);\nlet wait = (callback, delay, timeouts) => {\n  return new Promise((resolve) => {\n    let cb = async () => {\n      await callback();\n      resolve();\n    };\n    timeouts.push(setTimeout(cb, delay || 0));\n  });\n};\nlet cursorFontStyles = {\n  \"font-family\": \"\",\n  \"font-weight\": \"\",\n  \"font-size\": \"\",\n  \"font-style\": \"\",\n  \"line-height\": \"\",\n  color: \"\",\n  transform: \"translateX(-.125em)\"\n};\nlet setCursorStyles = (id, element) => {\n  let rootSelector = `[${DATA_ATTRIBUTE}='${id}']`;\n  let cursorSelector = `${rootSelector} .${CURSOR_CLASS}`;\n  let computedStyles = getComputedStyle(element);\n  let customProperties = Object.entries(cursorFontStyles).reduce(\n    (accumulator, [item, value]) => {\n      return `${accumulator} ${item}: var(--ti-cursor-${item}, ${value || computedStyles[item]});`;\n    },\n    \"\"\n  );\n  appendStyleBlock(\n    `${cursorSelector} { display: inline-block; width: 0; ${customProperties} }`,\n    id\n  );\n};\nconst duplicate = (value, times) => new Array(times).fill(value);\nconst countStepsToSelector = ({\n  queueItems,\n  selector,\n  cursorPosition,\n  to\n}) => {\n  if (isNumber(selector)) {\n    return selector * -1;\n  }\n  let isMovingToEnd = new RegExp(END, \"i\").test(to);\n  let selectorIndex = selector ? [...queueItems].reverse().findIndex(({ char }) => {\n    let parentElement = char.parentElement;\n    let parentMatches = parentElement.matches(selector);\n    if (isMovingToEnd && parentMatches) {\n      return true;\n    }\n    return parentMatches && parentElement.firstChild.isSameNode(char);\n  }) : -1;\n  if (selectorIndex < 0) {\n    selectorIndex = isMovingToEnd ? 0 : queueItems.length - 1;\n  }\n  let offset = isMovingToEnd ? 0 : 1;\n  return selectorIndex - cursorPosition + offset;\n};\nlet beforePaint = (cb) => {\n  return new Promise((resolve) => {\n    requestAnimationFrame(async () => {\n      resolve(await cb());\n    });\n  });\n};\nlet getAnimationFromElement = (element) => {\n  return element?.getAnimations().find((animation) => {\n    return animation.id === element.dataset.tiAnimationId;\n  });\n};\nlet setCursorAnimation = ({\n  cursor,\n  frames,\n  options\n}) => {\n  let animation = cursor.animate(frames, options);\n  animation.pause();\n  animation.id = cursor.dataset.tiAnimationId;\n  beforePaint(() => {\n    beforePaint(() => {\n      animation.play();\n    });\n  });\n  return animation;\n};\nlet rebuildCursorAnimation = ({\n  cursor,\n  options,\n  cursorOptions\n}) => {\n  if (!cursor || !cursorOptions)\n    return;\n  let animation = getAnimationFromElement(cursor);\n  let oldCurrentTime;\n  if (animation) {\n    options.delay = animation.effect.getComputedTiming().delay;\n    oldCurrentTime = animation.currentTime;\n    animation.cancel();\n  }\n  let newAnimation = setCursorAnimation({\n    cursor,\n    frames: cursorOptions.animation.frames,\n    options\n  });\n  if (oldCurrentTime) {\n    newAnimation.currentTime = oldCurrentTime;\n  }\n  return newAnimation;\n};\nlet execute = (queueItem) => queueItem.func?.call(null);\nlet fireItem = async ({\n  index,\n  queueItems,\n  wait: wait2,\n  cursor,\n  cursorOptions\n}) => {\n  let queueItem = queueItems[index][1];\n  let instantQueue = [];\n  let tempIndex = index;\n  let futureItem = queueItem;\n  let shouldBeGrouped = () => futureItem && !futureItem.delay;\n  let shouldPauseCursor = queueItem.shouldPauseCursor() && cursorOptions.autoPause;\n  while (shouldBeGrouped()) {\n    instantQueue.push(futureItem);\n    shouldBeGrouped() && tempIndex++;\n    futureItem = queueItems[tempIndex] ? queueItems[tempIndex][1] : null;\n  }\n  if (instantQueue.length) {\n    await beforePaint(async () => {\n      for (let q of instantQueue) {\n        await execute(q);\n      }\n    });\n    return tempIndex - 1;\n  }\n  let animation = getAnimationFromElement(cursor);\n  let options;\n  if (animation) {\n    options = {\n      ...animation.effect.getComputedTiming(),\n      delay: shouldPauseCursor ? cursorOptions.autoPauseDelay : 0\n    };\n  }\n  await wait2(async () => {\n    if (animation && shouldPauseCursor) {\n      animation.cancel();\n    }\n    await beforePaint(() => {\n      execute(queueItem);\n    });\n  }, queueItem.delay);\n  await rebuildCursorAnimation({\n    cursor,\n    options,\n    cursorOptions\n  });\n  return index;\n};\nlet processCursorOptions = (cursorOptions) => {\n  if (typeof cursorOptions === \"object\") {\n    let newOptions = {};\n    let { frames: defaultFrames, options: defaultOptions } = DEFAULT_OPTIONS.cursor.animation;\n    newOptions.animation = cursorOptions.animation || {};\n    newOptions.animation.frames = cursorOptions.animation?.frames || defaultFrames;\n    newOptions.animation.options = merge(\n      defaultOptions,\n      cursorOptions.animation?.options || {}\n    );\n    newOptions.autoPause = cursorOptions.autoPause ?? DEFAULT_OPTIONS.cursor.autoPause;\n    newOptions.autoPauseDelay = cursorOptions.autoPauseDelay || DEFAULT_OPTIONS.cursor.autoPauseDelay;\n    return newOptions;\n  }\n  if (cursorOptions === true) {\n    return DEFAULT_OPTIONS.cursor;\n  }\n  return cursorOptions;\n};\nconst TypeIt = function(element, options = {}) {\n  let _wait = async (callback, delay, silent = false) => {\n    if (_statuses.frozen) {\n      await new Promise((resolve) => {\n        this.unfreeze = () => {\n          _statuses.frozen = false;\n          resolve();\n        };\n      });\n    }\n    silent || await _opts.beforeStep(this);\n    await wait(callback, delay, _timeouts);\n    silent || await _opts.afterStep(this);\n  };\n  let _fireItemWithContext = (index, queueItems) => {\n    return fireItem({\n      index,\n      queueItems,\n      wait: _wait,\n      cursor: _cursor,\n      cursorOptions: _opts.cursor\n    });\n  };\n  let _removeNode = (node) => removeNode(node, _element);\n  let _elementIsInput = () => isInput(_element);\n  let _getPace = (index = 0) => calculatePace(_opts)[index];\n  let _getAllChars = () => getAllChars(_element);\n  let _maybeAppendPause = (opts = {}) => {\n    let delay = opts.delay;\n    delay && _queue.add({ delay });\n  };\n  let _queueAndReturn = (steps, opts) => {\n    _queue.add(steps);\n    _maybeAppendPause(opts);\n    return this;\n  };\n  let _getDerivedCursorPosition = () => _predictedCursorPosition ?? _cursorPosition;\n  let _generateTemporaryOptionQueueItems = (newOptions = {}) => {\n    return [\n      { func: () => _options(newOptions) },\n      { func: () => _options(_opts) }\n    ];\n  };\n  let _addSplitPause = (items) => {\n    let delay = _opts.nextStringDelay;\n    _queue.add([{ delay: delay[0] }, ...items, { delay: delay[1] }]);\n  };\n  let _setUpCursor = () => {\n    if (_elementIsInput()) {\n      return;\n    }\n    let cursor = createElement(\"span\");\n    cursor.className = CURSOR_CLASS;\n    if (!_shouldRenderCursor) {\n      cursor.style.visibility = \"hidden\";\n      return cursor;\n    }\n    cursor.innerHTML = getParsedBody(_opts.cursorChar).innerHTML;\n    return cursor;\n  };\n  let _attachCursor = async () => {\n    !_elementIsInput() && _cursor && _element.appendChild(_cursor);\n    if (_shouldRenderCursor) {\n      setCursorStyles(_id, _element);\n      _cursor.dataset.tiAnimationId = _id;\n      let { animation } = _opts.cursor;\n      let { frames, options: options2 } = animation;\n      setCursorAnimation({\n        frames,\n        cursor: _cursor,\n        options: {\n          duration: _opts.cursorSpeed,\n          ...options2\n        }\n      });\n    }\n  };\n  let _generateQueue = () => {\n    let strings = _opts.strings.filter((string) => !!string);\n    strings.forEach((string, index) => {\n      this.type(string);\n      if (index + 1 === strings.length) {\n        return;\n      }\n      let splitItems = _opts.breakLines ? [{ func: () => _type(createElement(\"BR\")), typeable: true }] : duplicate(\n        {\n          func: _delete,\n          delay: _getPace(1)\n        },\n        _queue.getTypeable().length\n      );\n      _addSplitPause(splitItems);\n    });\n  };\n  let _prepLoop = async (delay) => {\n    let derivedCursorPosition = _getDerivedCursorPosition();\n    derivedCursorPosition && await _move({ value: derivedCursorPosition });\n    let queueItems = _getAllChars().map((c) => {\n      return [\n        Symbol(),\n        {\n          func: _delete,\n          delay: _getPace(1),\n          deletable: true,\n          shouldPauseCursor: () => true\n        }\n      ];\n    });\n    for (let index = 0; index < queueItems.length; index++) {\n      await _fireItemWithContext(index, queueItems);\n    }\n    _queue.reset();\n    _queue.set(0, { delay });\n  };\n  let _maybePrependHardcodedStrings = (strings) => {\n    let existingMarkup = _element.innerHTML;\n    if (!existingMarkup) {\n      return strings;\n    }\n    _element.innerHTML = \"\";\n    if (_opts.startDelete) {\n      _element.innerHTML = existingMarkup;\n      expandTextNodes(_element);\n      _addSplitPause(\n        duplicate(\n          {\n            func: _delete,\n            delay: _getPace(1),\n            deletable: true\n          },\n          _getAllChars().length\n        )\n      );\n      return strings;\n    }\n    let hardCodedStrings = existingMarkup.replace(/<!--(.+?)-->/g, \"\").trim().split(/<br(?:\\s*?)(?:\\/)?>/);\n    return hardCodedStrings.concat(strings);\n  };\n  let _fire = async (remember = true) => {\n    _statuses.started = true;\n    let cleanUp = (qKey) => {\n      _queue.done(qKey, !remember);\n    };\n    try {\n      let queueItems = [..._queue.getQueue()];\n      for (let index = 0; index < queueItems.length; index++) {\n        let [queueKey, queueItem] = queueItems[index];\n        if (queueItem.done)\n          continue;\n        if (!queueItem.deletable || queueItem.deletable && _getAllChars().length) {\n          let newIndex = await _fireItemWithContext(index, queueItems);\n          Array(newIndex - index).fill(index + 1).map((x, y) => x + y).forEach((i) => {\n            let [key] = queueItems[i];\n            cleanUp(key);\n          });\n          index = newIndex;\n        }\n        cleanUp(queueKey);\n      }\n      if (!remember) {\n        return this;\n      }\n      _statuses.completed = true;\n      await _opts.afterComplete(this);\n      if (!_opts.loop) {\n        throw \"\";\n      }\n      let delay = _opts.loopDelay;\n      _wait(async () => {\n        await _prepLoop(delay[0]);\n        _fire();\n      }, delay[1]);\n    } catch (e) {\n    }\n    return this;\n  };\n  let _move = async (step) => {\n    _cursorPosition = updateCursorPosition(\n      step,\n      _cursorPosition,\n      _getAllChars()\n    );\n    repositionCursor(_element, _getAllChars(), _cursorPosition);\n  };\n  let _type = (char) => insertIntoElement(_element, char);\n  let _options = async (opts) => _opts = merge(_opts, opts);\n  let _empty = async () => {\n    if (_elementIsInput()) {\n      _element.value = \"\";\n      return;\n    }\n    _getAllChars().forEach(_removeNode);\n    return;\n  };\n  let _delete = () => {\n    let allChars = _getAllChars();\n    if (!allChars.length)\n      return;\n    if (_elementIsInput()) {\n      _element.value = _element.value.slice(0, -1);\n    } else {\n      _removeNode(allChars[_cursorPosition]);\n    }\n  };\n  this.break = function(actionOpts) {\n    return _queueAndReturn(\n      {\n        func: () => _type(createElement(\"BR\")),\n        typeable: true\n      },\n      actionOpts\n    );\n  };\n  this.delete = function(numCharacters = null, actionOpts = {}) {\n    numCharacters = handleFunctionalArg(numCharacters);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let num = numCharacters;\n    let { instant, to } = actionOpts;\n    let typeableQueueItems = _queue.getTypeable();\n    let rounds = (() => {\n      if (num === null) {\n        return typeableQueueItems.length;\n      }\n      if (isNumber(num)) {\n        return num;\n      }\n      return countStepsToSelector({\n        queueItems: typeableQueueItems,\n        selector: num,\n        cursorPosition: _getDerivedCursorPosition(),\n        to\n      });\n    })();\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: _delete,\n            delay: instant ? 0 : _getPace(1),\n            deletable: true\n          },\n          rounds\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.empty = function(actionOpts = {}) {\n    return _queueAndReturn({ func: _empty }, actionOpts);\n  };\n  this.exec = function(func, actionOpts = {}) {\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    return _queueAndReturn(\n      [bookEndQueueItems[0], { func: () => func(this) }, bookEndQueueItems[1]],\n      actionOpts\n    );\n  };\n  this.move = function(movementArg, actionOpts = {}) {\n    movementArg = handleFunctionalArg(movementArg);\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let { instant, to } = actionOpts;\n    let numberOfSteps = countStepsToSelector({\n      queueItems: _queue.getTypeable(),\n      selector: movementArg === null ? \"\" : movementArg,\n      to,\n      cursorPosition: _getDerivedCursorPosition()\n    });\n    let directionalStep = numberOfSteps < 0 ? -1 : 1;\n    _predictedCursorPosition = _getDerivedCursorPosition() + numberOfSteps;\n    return _queueAndReturn(\n      [\n        bookEndQueueItems[0],\n        ...duplicate(\n          {\n            func: () => _move(directionalStep),\n            delay: instant ? 0 : _getPace(),\n            cursorable: true\n          },\n          Math.abs(numberOfSteps)\n        ),\n        bookEndQueueItems[1]\n      ],\n      actionOpts\n    );\n  };\n  this.options = function(opts, actionOpts = {}) {\n    opts = handleFunctionalArg(opts);\n    _options(opts);\n    return _queueAndReturn({}, actionOpts);\n  };\n  this.pause = function(milliseconds, actionOpts = {}) {\n    return _queueAndReturn(\n      { delay: handleFunctionalArg(milliseconds) },\n      actionOpts\n    );\n  };\n  this.type = function(string, actionOpts = {}) {\n    string = handleFunctionalArg(string);\n    let { instant } = actionOpts;\n    let bookEndQueueItems = _generateTemporaryOptionQueueItems(actionOpts);\n    let chars = maybeChunkStringAsHtml(string, _opts.html);\n    let charsAsQueueItems = chars.map((char) => {\n      return {\n        func: () => _type(char),\n        char,\n        delay: instant || isNonVoidElement(char) ? 0 : _getPace(),\n        typeable: char.nodeType === Node.TEXT_NODE\n      };\n    });\n    let itemsToQueue = [\n      bookEndQueueItems[0],\n      { func: async () => await _opts.beforeString(string, this) },\n      ...charsAsQueueItems,\n      { func: async () => await _opts.afterString(string, this) },\n      bookEndQueueItems[1]\n    ];\n    return _queueAndReturn(itemsToQueue, actionOpts);\n  };\n  this.is = function(key) {\n    return _statuses[key];\n  };\n  this.destroy = function(shouldRemoveCursor = true) {\n    _timeouts = destroyTimeouts(_timeouts);\n    handleFunctionalArg(shouldRemoveCursor) && _cursor && _removeNode(_cursor);\n    _statuses.destroyed = true;\n  };\n  this.freeze = function() {\n    _statuses.frozen = true;\n  };\n  this.unfreeze = () => {\n  };\n  this.reset = function(rebuild) {\n    !this.is(\"destroyed\") && this.destroy();\n    if (rebuild) {\n      _queue.wipe();\n      rebuild(this);\n    } else {\n      _queue.reset();\n    }\n    _cursorPosition = 0;\n    for (let property in _statuses) {\n      _statuses[property] = false;\n    }\n    _element[_elementIsInput() ? \"value\" : \"innerHTML\"] = \"\";\n    return this;\n  };\n  this.go = function() {\n    if (_statuses.started) {\n      return this;\n    }\n    _attachCursor();\n    if (!_opts.waitUntilVisible) {\n      _fire();\n      return this;\n    }\n    fireWhenVisible(_element, _fire.bind(this));\n    return this;\n  };\n  this.flush = function(cb = () => {\n  }) {\n    _attachCursor();\n    _fire(false).then(cb);\n    return this;\n  };\n  this.getQueue = () => _queue;\n  this.getOptions = () => _opts;\n  this.updateOptions = (options2) => _options(options2);\n  this.getElement = () => _element;\n  let _element = selectorToElement(element);\n  let _timeouts = [];\n  let _cursorPosition = 0;\n  let _predictedCursorPosition = null;\n  let _statuses = merge({}, DEFAULT_STATUSES);\n  options.cursor = processCursorOptions(\n    options.cursor ?? DEFAULT_OPTIONS.cursor\n  );\n  let _opts = merge(DEFAULT_OPTIONS, options);\n  _opts = merge(_opts, {\n    html: !_elementIsInput() && _opts.html,\n    nextStringDelay: calculateDelay(_opts.nextStringDelay),\n    loopDelay: calculateDelay(_opts.loopDelay)\n  });\n  let _id = generateHash();\n  let _queue = Queue([{ delay: _opts.startDelay }]);\n  _element.dataset.typeitId = _id;\n  appendStyleBlock(PLACEHOLDER_CSS);\n  let _shouldRenderCursor = !!_opts.cursor && !_elementIsInput();\n  let _cursor = _setUpCursor();\n  _opts.strings = _maybePrependHardcodedStrings(asArray(_opts.strings));\n  if (_opts.strings.length) {\n    _generateQueue();\n  }\n};\nexport {\n  TypeIt as default\n};\n","import TypeIt from \"../node_modules/typeit/dist/index.es.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    new TypeIt(\"#typeIt\", {\n      lifeLike: true,\n      startDelay: 1000,\n      loop: true,\n      cursorChar: \" |\",\n    })\n      .pause(3000)\n      .delete()\n      .pause(500)\n      .type(\"students.\")\n      .pause(1000)\n      .move(-9)\n      .type(\"<i>naïve<i> \")\n      .pause(2000)\n      .delete()\n      .type(\"a conference for \")\n      .pause(1500)\n      .move(9)\n      .delete()\n      .pause(500)\n      .type(\"our Asian stereotypes.\")\n      .pause(2500)\n      .delete(18)\n      .type(\"immigrant stories.\")\n      .pause(2500)\n      .delete(18)\n      .type(\"generational trauma.\")\n      .pause(4000)\n      .delete()\n      .pause(500)\n      .type(\"the bamboo ceiling.\")\n      .pause(2000)\n      .delete()\n      .type(\"future leaders.\")\n      .pause(2000)\n      .delete()\n      .type(\"our GPAs.\")\n      .pause(2500)\n      .delete()\n      .type(\"aspiring creatives.\")\n      .pause(2000)\n      .delete()\n      .type(\"TA's.\")\n      .pause(2000)\n      .delete()\n      .type(\"the sum of our meal points.\")\n      .pause(2000)\n      .delete()\n      .type(\"young activists.\")\n      .pause(2000)\n      .delete()\n      .type(\"our childhood instruments.\")\n      .pause(2000)\n      .delete()\n      .type(\"conditioned perfectionists.\")\n      .pause(5000)\n      .delete()\n      .type(\"professors.\")\n      .pause(2000)\n      .delete()\n      .type(\"change-makers.\")\n      .pause(2000)\n      .delete()\n      .type(\"another free food event.\")\n      .pause(2000)\n      .delete()\n      .type(\"<span class='tiny'>but, we do have free food.</span>\")\n      .pause(5000)\n      .delete()\n      .type(\"<span class='tiny'>seriously. so much food. pls help.</span>\")\n      .pause(1000)\n      .delete()\n      .go();\n  });"],"names":["$4c3637df2fab6a42$var$isArray","thing","Array","isArray","$4c3637df2fab6a42$var$asArray","value","$4c3637df2fab6a42$var$toArray","val","from","$4c3637df2fab6a42$var$createTextNode","content","document","createTextNode","$4c3637df2fab6a42$var$expandTextNodes","element","childNodes","forEach","child","nodeValue","c","parentNode","insertBefore","remove","$4c3637df2fab6a42$var$getParsedBody","doc","implementation","createHTMLDocument","body","innerHTML","$4c3637df2fab6a42$var$DATA_ATTRIBUTE","$4c3637df2fab6a42$var$CURSOR_CLASS","$4c3637df2fab6a42$var$DEFAULT_STATUSES","started","completed","frozen","destroyed","$4c3637df2fab6a42$var$DEFAULT_OPTIONS","breakLines","cursor","autoPause","autoPauseDelay","animation","frames","map","n","opacity","options","iterations","Infinity","easing","fill","cursorChar","cursorSpeed","deleteSpeed","html","lifeLike","loop","loopDelay","nextStringDelay","speed","startDelay","startDelete","strings","waitUntilVisible","beforeString","afterString","beforeStep","afterStep","afterComplete","$4c3637df2fab6a42$var$PLACEHOLDER_CSS","$4c3637df2fab6a42$var$walkElementNodes","shouldReverse","shouldIncludeCursor","nextNode","querySelector","walker","createTreeWalker","NodeFilter","SHOW_ALL","acceptNode","node","classList","contains","FILTER_ACCEPT","FILTER_REJECT","nodes","originalParent","push","reverse","$4c3637df2fab6a42$var$maybeChunkStringAsHtml","str","asHtml","$4c3637df2fab6a42$var$createElement","el","createElement","$4c3637df2fab6a42$var$appendStyleBlock","styles","id","styleBlock","appendChild","head","$4c3637df2fab6a42$var$calculateDelay","delayArg","$4c3637df2fab6a42$var$randomInRange","range2","Math","abs","random","$4c3637df2fab6a42$var$range","$4c3637df2fab6a42$var$isInput","$4c3637df2fab6a42$var$handleFunctionalArg","arg","$4c3637df2fab6a42$var$isNumber","Number","isInteger","$4c3637df2fab6a42$var$select","selector","all","$4c3637df2fab6a42$var$merge","originalObj","newObj","Object","assign","$4c3637df2fab6a42$var$cursorFontStyles","color","transform","$4c3637df2fab6a42$var$duplicate","times","$4c3637df2fab6a42$var$countStepsToSelector","queueItems","cursorPosition","to","isMovingToEnd","RegExp","test","selectorIndex","findIndex","char","parentElement","parentMatches","matches","firstChild","isSameNode","length","$4c3637df2fab6a42$var$beforePaint","cb","Promise","resolve","requestAnimationFrame","async","$4c3637df2fab6a42$var$getAnimationFromElement","getAnimations","find","dataset","tiAnimationId","$4c3637df2fab6a42$var$setCursorAnimation","animate","pause","play","$4c3637df2fab6a42$var$execute","queueItem","func","call","$4c3637df2fab6a42$var$fireItem","index","wait","wait2","cursorOptions","instantQueue","tempIndex","futureItem","shouldBeGrouped","delay","shouldPauseCursor","q","effect","getComputedTiming","cancel","oldCurrentTime","currentTime","newAnimation","$4c3637df2fab6a42$var$rebuildCursorAnimation","$4c3637df2fab6a42$export$2e2bcd8739ae039","_wait","callback","silent","_statuses","this","unfreeze","_opts","timeouts","setTimeout","$4c3637df2fab6a42$var$wait","_timeouts","_fireItemWithContext","_cursor","_removeNode","rootElement","nodeParent","$4c3637df2fab6a42$var$removeNode","_element","_elementIsInput","_getPace","$4c3637df2fab6a42$var$calculatePace","_getAllChars","filter","$4c3637df2fab6a42$var$getAllChars","_queueAndReturn","steps","opts","_queue","add","_maybeAppendPause","_getDerivedCursorPosition","_predictedCursorPosition","_cursorPosition","_generateTemporaryOptionQueueItems","newOptions","_options","_addSplitPause","items","_attachCursor","_shouldRenderCursor","cursorSelector","computedStyles","getComputedStyle","customProperties","entries","reduce","accumulator","item","$4c3637df2fab6a42$var$setCursorStyles","_id","options2","duration","_fire","remember","cleanUp","qKey","done","getQueue","queueKey","deletable","newIndex","x","y","i","key","derivedCursorPosition","_move","Symbol","_delete","reset","set","_prepLoop","e","step","printedCharacters","min","max","allChars","newCursorPosition","nodeToInsertBefore","$4c3637df2fab6a42$var$repositionCursor","_type","originalTarget","character","textContent","target","tagName","$4c3637df2fab6a42$var$insertIntoElement","_empty","slice","break","actionOpts","typeable","delete","numCharacters","bookEndQueueItems","num","instant","typeableQueueItems","getTypeable","rounds","empty","exec","move","movementArg","numberOfSteps","directionalStep","cursorable","milliseconds","type","string","charsAsQueueItems","outerHTML","nodeType","Node","TEXT_NODE","itemsToQueue","is","destroy","shouldRemoveCursor","clearTimeout","freeze","rebuild","wipe","property","go","IntersectionObserver","observer2","entry","isIntersecting","unobserve","threshold","observe","$4c3637df2fab6a42$var$fireWhenVisible","bind","flush","then","getOptions","updateOptions","getElement","defaultFrames","defaultOptions","$4c3637df2fab6a42$var$processCursorOptions","toString","substring","initialItems","_q","innerText","buildQueueItem","Boolean","rawValues","values","Map","keys","shouldDestroy","get","$4c3637df2fab6a42$var$Queue","typeitId","className","style","visibility","_setUpCursor","existingMarkup","replace","trim","split","concat","_maybePrependHardcodedStrings","splitItems","_generateQueue","addEventListener"],"version":3,"file":"about.1b789f4a.js.map"}